name: SQL Database Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_NAME: "event_management"
  SQLCL_PATH: "/opt/homebrew/Caskroom/sqlcl/25.1.1.113.2054/sqlcl/bin/sql"
  JAVA_HOME: "/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home"
  WORK_DIR: "/Users/swami/WorkSpace/oracle/learn/practice/event_management"
  TNS_ADMIN: "/Users/swami/WorkSpace/oracle/network/admin"

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  release-artifact:
    name: SQL Release Creation
    runs-on: self-hosted
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.release_version.outputs.version }}
      artifact_path: ${{ steps.artifact_gen.outputs.artifact_path }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set Release Version
        id: release_version
        run: |
          echo "version=1.0.0" >> $GITHUB_OUTPUT

      - name: Create Project Release
        run: |
          ${SQLCL_PATH} ""Dana[EM]"/DanaPass@PDB_DEV" << EOF
          project release -version ${{ steps.release_version.outputs.version }}
          exit
          EOF

      - name: Generate Artifact
        id: artifact_gen
        run: |
          ${SQLCL_PATH} ""Dana[EM]"/DanaPass@PDB_DEV" << EOF
          project gen-artifact
          exit
          EOF
          echo "artifact_path=${WORK_DIR}/artifact/event_management-${{ steps.release_version.outputs.version }}.zip" >> $GITHUB_OUTPUT
  
  deploy-test:
    name: SQL Deploy to TEST
    needs: release-artifact
    runs-on: self-hosted
    environment:
      name: test
    
    steps:
      - name: Deploy to TEST
        run: |
          ${SQLCL_PATH} "SVC_CICD/SvcCicdPass@PDB_TEST" << EOF
          project deploy -file ${{ needs.release-artifact.outputs.artifact_path }}
          select table_name from all_tables where owner='EM' order by 1;
          exit
          EOF

  deploy-uat:
    name: SQL Deploy to UAT
    needs: [release-artifact, deploy-test]
    runs-on: self-hosted
    environment:
      name: uat
    
    steps:
      - name: Deploy to UAT
        run: |
          ${SQLCL_PATH} "SVC_CICD/SvcCicdPass@PDB_UAT" << EOF
          project deploy -file ${{ needs.release-artifact.outputs.artifact_path }}
          select table_name from all_tables where owner='EM' order by 1;
          exit
          EOF

  deploy-prod:
    name: SQL Deploy to PROD
    needs: [release-artifact, deploy-test, deploy-uat]
    runs-on: self-hosted
    environment:
      name: prod
    
    steps:
      - name: Deploy to PROD
        run: |
          ${SQLCL_PATH} "SVC_CICD/SvcCicdPass@PDB_PROD" << EOF
          project deploy -file ${{ needs.release-artifact.outputs.artifact_path }}
          select table_name from all_tables where owner='EM' order by 1;
          exit
          EOF
