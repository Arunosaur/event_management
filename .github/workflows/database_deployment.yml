name: Database Deployment - TEST/UAT

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  export-and-lint:
    name: Export and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SQLcl
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'
      
      - name: Download SQLcl
        run: |
          wget https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip
          unzip sqlcl-latest.zip
          echo "$PWD/sqlcl/bin" >> $GITHUB_PATH

      - name: Export Project
        run: |
          sql -S /nolog <<EOF
          connect ${{ secrets.DEV_DB_USERNAME }}/${{ secrets.DEV_DB_PASSWORD }}@${{ secrets.DEV_DB_CONNECTION_STRING }}
          project export -directory ./export
          exit
          EOF

      - name: Lint SQL Scripts
        run: |
          # Run linting on exported SQL scripts
          echo "Running SQL linting checks..."
          # Add your SQL linting tool here (e.g., SQLFluff, custom script)
          # For example:
          # sqlfluff lint ./export/**/*.sql
      
      - name: Upload Export Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: project-export
          path: ./export

  deploy-to-test:
    name: Deploy to TEST
    needs: export-and-lint
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup SQLcl
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'
      
      - name: Download SQLcl
        run: |
          wget https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip
          unzip sqlcl-latest.zip
          echo "$PWD/sqlcl/bin" >> $GITHUB_PATH

      - name: Download Export Artifacts
        uses: actions/download-artifact@v3
        with:
          name: project-export
          path: ./export

      - name: Stage Changes
        run: |
          sql -S /nolog <<EOF
          connect ${{ secrets.TEST_DB_USERNAME }}/${{ secrets.TEST_DB_PASSWORD }}@${{ secrets.TEST_DB_CONNECTION_STRING }}
          project stage -source ./export
          exit
          EOF

      - name: Verify Changes
        run: |
          sql -S /nolog <<EOF
          connect ${{ secrets.TEST_DB_USERNAME }}/${{ secrets.TEST_DB_PASSWORD }}@${{ secrets.TEST_DB_CONNECTION_STRING }}
          project verify
          exit
          EOF

      - name: Deploy to TEST
        run: |
          sql -S /nolog <<EOF
          connect ${{ secrets.TEST_DB_USERNAME }}/${{ secrets.TEST_DB_PASSWORD }}@${{ secrets.TEST_DB_CONNECTION_STRING }}
          project deploy
          exit
          EOF
      
      - name: Run Validation Tests
        run: |
          echo "Running validation tests on TEST environment..."
          # Add your test scripts here

  deploy-to-uat:
    name: Deploy to UAT
    needs: deploy-to-test
    runs-on: ubuntu-latest
    environment: 
      name: uat
      url: ${{ steps.deploy.outputs.deployment_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup SQLcl
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'
      
      - name: Download SQLcl
        run: |
          wget https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip
          unzip sqlcl-latest.zip
          echo "$PWD/sqlcl/bin" >> $GITHUB_PATH

      - name: Download Export Artifacts
        uses: actions/download-artifact@v3
        with:
          name: project-export
          path: ./export

      - name: Stage Changes
        run: |
          sql -S /nolog <<EOF
          connect ${{ secrets.UAT_DB_USERNAME }}/${{ secrets.UAT_DB_PASSWORD }}@${{ secrets.UAT_DB_CONNECTION_STRING }}
          project stage -source ./export
          exit
          EOF

      - name: Verify Changes
        run: |
          sql -S /nolog <<EOF
          connect ${{ secrets.UAT_DB_USERNAME }}/${{ secrets.UAT_DB_PASSWORD }}@${{ secrets.UAT_DB_CONNECTION_STRING }}
          project verify
          exit
          EOF

      - name: Deploy to UAT
        id: deploy
        run: |
          sql -S /nolog <<EOF
          connect ${{ secrets.UAT_DB_USERNAME }}/${{ secrets.UAT_DB_PASSWORD }}@${{ secrets.UAT_DB_CONNECTION_STRING }}
          project deploy
          exit
          EOF
          echo "deployment_url=https://uat-database-dashboard.example.com" >> $GITHUB_OUTPUT
      
      - name: Run UAT Validation Tests
        run: |
          echo "Running validation tests on UAT environment..."
          # Add your UAT test scripts here

